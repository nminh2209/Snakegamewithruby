require 'gosu'

SQUARE_SIZE = 30
GRID_WIDTH = 800 / SQUARE_SIZE
GRID_HEIGHT = 600 / SQUARE_SIZE

class Snake
  attr_writer :direction

  def initialize
    @positions = [[2, 0], [2, 1], [2, 2], [2, 3]]
    @direction = 'down'
    @growing = false
  end

  def draw
    @positions.each do |position|
      Gosu.draw_rect(position[0] * SQUARE_SIZE, position[1] * SQUARE_SIZE, SQUARE_SIZE - 1, SQUARE_SIZE - 1, Gosu::Color::WHITE)
    end
  end

  def grow
    @growing = true
  end

  def move
      ing
    @positions.push(next_position)
    @growing = false
  end 
  def can_change_direction_to?(new_direction)
    case @direction
    when 'up' then new_direction != 'down'
    when 'down' then new_direction != 'up'
    when 'left' then new_direction != 'right'
    when 'right' then new_direction != 'left'
    end
  end

  def x
    head[0]
  end

  def y
    head[1]
  end

  def next_position
    case @direction
    when 'down' then new_coords(head[0], head[1] + 1)
    when 'up' then new_coords(head[0], head[1] - 1)
    when 'left' then new_coords(head[0] - 1, head[1])
    when 'right' then new_coords(head[0] + 1, head[1])
    end
  end

  def hit_itself?
    @positions.uniq.length != @positions.length
  end

  private

  def new_coords(x, y)
    [x % GRID_WIDTH, y % GRID_HEIGHT]
  end

  def head
    @positions.last
  end
end
class Game
    def initialize
      @ball_x = 10
      @ball_y = 10
      @score = 0
      @finished = false
    end
  
    def draw
      Gosu.draw_rect(@ball_x * SQUARE_SIZE, @ball_y * SQUARE_SIZE, SQUARE_SIZE, SQUARE_SIZE, Gosu::Color::YELLOW)
      font = Gosu::Font.new(25)
font.draw_text(text_message, 10, 10, 1, 1, 1, Gosu::Color::GREEN)
    end
  
    def snake_hit_ball?(x, y)
      @ball_x == x && @ball_y == y
    end
  
    def record_hit
      @score += 1
      @ball_x = rand(GRID_WIDTH)
      @ball_y = rand(GRID_HEIGHT)
    end
  
    def finish
      @finished = true
    end
  
    def finished?
      @finished
    end
  
    private
  
    def text_message
      if finished?
        "Game over, Your Score was #{@score}. Press 'R' to restart. "
      else
        "Score: #{@score}"
      end
    end
  end
class GameWindow < Gosu::Window
  def initialize
    super(800, 600, false)
    self.caption = 'Snake Game'
    @snake = Snake.new
    @game = Game.new
  end

  def update
    unless @game.finished?
      @snake.move
    end

    if @game.snake_hit_ball?(@snake.x, @snake.y)
      @game.record_hit
      @snake.grow
    end

    if @snake.hit_itself?
      @game.finish
    end
  end

  def draw
    @snake.draw
    @game.draw
  end

  def button_down(id)
    case id
    when Gosu::KB_UP
      @snake.direction = 'up' if @snake.can_change_direction_to?('up')
    when Gosu::KB_DOWN
      @snake.direction = 'down' if @snake.can_change_direction_to?('down')
    when Gosu::KB_LEFT
      @snake.direction = 'left' if @snake.can_change_direction_to?('left')
    when Gosu::KB_RIGHT
      @snake.direction = 'right' if @snake.can_change_direction_to?('right')
    when Gosu::KB_R
      if @game.finished?
        @snake = Snake.new
        @game = Game.new
      end
    end
  end
end

GameWindow.new.show